from flask import Flask, render_template, request
import pickle
import pandas as pd

app = Flask(__name__)

# Load model, imputer, and expected columns
with open('cardiac_attack_model.pkl', 'rb') as f:
    model = pickle.load(f)

with open('imputer.pkl', 'rb') as f:
    imputer = pickle.load(f)

with open('model_features.pkl', 'rb') as f:
    expected_columns = pickle.load(f)

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/predict', methods=['POST'])
def predict():
    try:
        data = request.form

        # Step 1: Convert form input to DataFrame
        df = pd.DataFrame([{
            'gender': data['gender'],
            'age': float(data['age']),
            'hypertension': int(data['hypertension']),
            'heart_disease': int(data['heart_disease']),
            'ever_married': data['ever_married'],
            'work_type': data['work_type'],
            'Residence_type': data['Residence_type'],
            'avg_glucose_level': float(data['avg_glucose_level']),
            'bmi': float(data['bmi']),
            'smoking_status': data['smoking_status']
        }])

        # Step 2: One-hot encode and align with training columns
        df_encoded = pd.get_dummies(df)
        df_encoded = df_encoded.reindex(columns=expected_columns, fill_value=0)

        # Step 3: Impute missing values (if any)
        df_imputed = imputer.transform(df_encoded)

        # Step 4: Predict
        prediction = model.predict(df_imputed)[0]
        result = "High Stroke Risk ⚠️" if prediction == 1 else "No Stroke Risk ✅"

        return render_template('index.html', prediction=result)

    except Exception as e:
        return render_template('index.html', prediction=f"Error: {str(e)}")

if __name__ == '__main__':
    app.run(debug=True)
